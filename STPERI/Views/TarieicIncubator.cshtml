@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.TarieicIncubator>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Newtonsoft.Json.Linq;
@{
	Layout = "Master.cshtml";
}
</header>

    <div class="innerbanner fitlayout">

         <div class="logonewsholder mx-3 aos-item" data-aos="fade-up">
            <img alt="اليوم السابع" src="@Model.ElyoumElsabeaImage.Url()" />
         </div>
        <div class="clearfix"></div>
        <h3 class="px-3 aos-item" data-aos="fade-up">@Model.TitleHeaderNewsPaper</h3>
    <div class="clearfix"></div>
        <span class="px-3 aos-item" data-aos="fade-up">
          @Model.DescriptionHeader
        </span>
        <img alt="" src="@Model.BannerImage.Url()" />
    </div>


    <div class="w-bg fitlayout paddingabove pt-4 mb-4">

      <div class="container-fluid">
           
           <div class="row">

            <div class="col-lg-10 mb-4 aos-item" data-aos="fade-down">
              <h2 class="migatitle mb-4">@Model.SectionTitle</h2>

              <span>
           
                    @Html.Raw(RenderRichTextContent(Model.SectionDescription.ToString()))
              </span>
            </div>


            <div class="col-md-6 mb-3 aos-item" data-aos="fade-right">
                  <img alt="" src="@Model.FirstSectionImage.Url()" class="w-100" />
            </div>

            <div class="col-md-6 mb-3 aos-item" data-aos="fade-left">
              <img alt="" src="@Model.SecondSectionImage.Url()" class="w-100" />
        </div>

        <div class="col-lg-10 my-2 aos-item" data-aos="fade-up">
          <h2 class="migatitle mb-4">@Model.TopicTitle</h2>

        </div>

        <div class="col-md-6 mb-3 aos-item" data-aos="fade-right">
          <div class="quoatline">
                    @Html.Raw(RenderRichTextContent(@Model.TopicFirstDescription.ToString()))
         </div>
        </div>

        <div class="col-md-6 mb-3 aos-item" data-aos="fade-left">
          <div class="quoatline">
                    @Html.Raw(RenderRichTextContent(@Model.TopicSecondDescription.ToString()))
          </div>
        </div>
          
           </div>
      </div>

    </div>
@functions {
    public HtmlString RenderRichTextContent(string jsonContent)
    {
        if (string.IsNullOrEmpty(jsonContent))
        {
            return new HtmlString("");
        }

        try
        {
            // Parse the JSON content
            var jsonObject = JObject.Parse(jsonContent);

            // Extract the markup value
            var markup = jsonObject["markup"]?.ToString() ?? "";

            // Return the HTML content
            return new HtmlString(markup);
        }
        catch (Exception ex)
        {
            // Handle parsing errors if necessary
            return new HtmlString($"<!-- Error parsing content: {ex.Message} -->");
        }
    }
}
}